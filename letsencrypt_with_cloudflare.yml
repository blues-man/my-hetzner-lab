#!/usr/bin/env ansible-playbook
---
- hosts: localhost
  gather_facts: false
  connection: local
  tasks:
  - name: Create certificates dir
    file:
      path: "{{ playbook_dir }}/certificates"
      state: directory
      mode: 0755

  - name: Create account-key
    openssl_privatekey:
      path: "{{ playbook_dir }}/certificates/{{ public_hostname }}-account.key"
      type: RSA
      size: 4096

  - name: Create {{ public_hostname }}.key
    openssl_privatekey:
      path: "{{ playbook_dir }}/certificates/{{ public_hostname }}.key"
      type: RSA
      size: 4096

 # Generate an OpenSSL Certificate Signing Request with subjectAltName extension
  - openssl_csr:
      path: "{{ playbook_dir }}/certificates/{{ public_hostname }}.csr"
      privatekey_path: "{{ playbook_dir }}/certificates/{{ public_hostname }}.key"
      subject_alt_name: "DNS:*.{{ public_hostname }},DNS:{{ public_hostname }}"

  - name: Create a challenge for {{ public_hostname }} using a account key file.
    acme_certificate:
      account_key_src: "{{ playbook_dir }}/certificates/{{ public_hostname }}-account.key"
      account_email: "{{ cloudflare_account_email }}"
      src: "{{ playbook_dir }}/certificates/{{ public_hostname }}.csr"
      cert: "{{ playbook_dir }}/certificates/{{ public_hostname }}.crt"
      challenge: dns-01
      acme_directory: https://acme-v02.api.letsencrypt.org/directory
      acme_version: 2
      # acme_directory: https://acme-staging-v02.api.letsencrypt.org/directory
      # Renew if the certificate is at least 30 days old
      remaining_days: 60
      terms_agreed: yes
    register: sample_com_challenge

  - debug: var=sample_com_challenge

  - set_fact: 
      challenge_data_dns: "{{ sample_com_challenge.challenge_data_dns }}"
    when: sample_com_challenge is changed

  - name: Create DNS record
    cloudflare_dns:
      zone: bohne.io
      record: "{{ item.0.key }}"
      ttl: 120
      type: TXT
      value: "{{ item.1 }}"
      account_email: "{{ cloudflare_account_email }}"
      account_api_token: "{{ cloudflare_account_api_token }}"
    register: record
    loop: "{{ challenge_data_dns | default({}) | dict2items | subelements('value') }}"
    when: sample_com_challenge is changed
  
  - name: DNS record info
    debug:
      msg: "{{ item.0.key }} TXT {{ item.1 }}"
    loop: "{{ challenge_data_dns | default({}) | dict2items | subelements('value') }}"
    when: sample_com_challenge is changed 

  - pause:
      seconds: 120
    when: sample_com_challenge is changed

  - name: Let the challenge be validated and retrieve the cert and intermediate certificate
    acme_certificate:
      account_key_src: "{{ playbook_dir }}/certificates/{{ public_hostname }}-account.key"
      account_email: "{{ cloudflare_account_email }}"
      src: "{{ playbook_dir }}/certificates/{{ public_hostname }}.csr"
      cert: "{{ playbook_dir }}/certificates/{{ public_hostname }}.crt"
      fullchain: "{{ playbook_dir }}/certificates/{{ public_hostname }}-fullchain.crt"
      chain: "{{ playbook_dir }}/certificates/{{ public_hostname }}-intermediate.crt"
      challenge: dns-01
      acme_version: 2
      # acme_directory: https://acme-staging-v02.api.letsencrypt.org/directory
      acme_directory: https://acme-v02.api.letsencrypt.org/directory
      remaining_days: 60
      data: "{{ sample_com_challenge }}"
    when: sample_com_challenge is changed
  
  - name: Delete DNS record
    cloudflare_dns:
      zone: bohne.io
      record: "{{ item.0.key }}"
      ttl: 120
      type: TXT
      value: "{{ item.1 }}"
      account_email: "{{ cloudflare_account_email }}"
      account_api_token: "{{ cloudflare_account_api_token }}"
      state: absent
    loop: "{{ challenge_data_dns | default({}) | dict2items | subelements('value') }}"
    when: sample_com_challenge is changed 

  - name: concat root ca and intermediate
    shell: "cat {{ playbook_dir }}/certificates/isrgrootx1.pem {{ playbook_dir }}/certificates/{{ public_hostname }}-intermediate.crt >> {{ playbook_dir }}/certificates/ca-bundle.pem"
    args:
      creates: "{{ playbook_dir }}/certificates/ca-bundle.pem"
